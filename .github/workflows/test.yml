# This is the main CI workflow that runs the test suite on all pushes to main and all pull requests.
# It runs the following jobs:
# - required: runs the test suite on ubuntu with stable and beta rust toolchains
# - os-check: runs the test suite on mac and windows
# - coverage: runs the test suite and collects coverage information
# See check.yml for information about how the concurrency cancellation and workflow triggering works
permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: test
jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        # run on stable and beta to ensure that tests won't break on the next version of the rust
        # toolchain
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # tag=v5.0.0
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # branch=master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential musl-tools
      - name: Add musl stddlib
        run: rustup target add x86_64-unknown-linux-musl
      - name: cargo generate-lockfile
        # enable this ci template to run regardless of whether the lockfile is checked in or not
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      # https://twitter.com/jonhoo/status/1571290371124260865
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets --target x86_64-unknown-linux-musl
  os-check:
    # run cargo test on mac and windows
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      # if your project needs OpenSSL, uncomment this to fix Windows builds.
      # it's commented out by default as the install command takes 5-10m.
      # - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
      #   if: runner.os == 'Windows'
      # - run: vcpkg install openssl:x64-windows-static-md
      #   if: runner.os == 'Windows'
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # tag=v5.0.0
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # branch=master
        with:
          toolchain: stable
      - name: Install build dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          # macOS should have Xcode command line tools, but let's ensure they're available
          xcode-select --install || true
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test
        run: cargo test --locked --all-features --all-targets
